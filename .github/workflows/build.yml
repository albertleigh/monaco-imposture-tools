name: Build Status
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - "v*"
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 16

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: public_npm
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: 'https://registry.npmjs.org'
      - name: List CI env variables
        run: |
          cat /etc/lsb-release
          echo $(cmake --version)
          echo node-js $(node -v)
      - name: Setup workspace
        run: |
          npm ci
          npm run audit
          npm run setup
      - name: Build all
        run: |
          npm run compile
#     TODO REMOVE ONCE FIXED
#      - name: Test and collect coverage
#        run: |
#          npm run coverage
#          npm run create-coverage:lcov
#      - name: report to coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.github_token }}
      - name: dry-run rc publishing
        if: success() && !(startsWith( github.ref, 'refs/tags/'))
        run: |
          npm run lerna:pack
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: upload tarball to artifactory
        if: success() && !(startsWith( github.ref, 'refs/tags/'))
        uses: actions/upload-artifact@v3
        with:
          name: npm_tarball
          path: |
            !node_modules/**/*.tgz
            languages/monaco-az-logic-app-lang/*.tgz
            packages/grammars/*.tgz
            packages/onigasm/*.tgz
            packages/core/*.tgz
      - name: rc publishing
        if: success() && (startsWith( github.ref, 'refs/tags/'))
        run: |
          echo ${NODE_AUTH_TOKEN:0:7}
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo $TAG_VERSION
          git checkout -b release/$TAG_VERSION
          npx lerna publish $TAG_VERSION --no-changelog --no-git-tag-version --no-push --yes --registry=.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
